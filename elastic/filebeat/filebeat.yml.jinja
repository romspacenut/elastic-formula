################### Filebeat Configuration Example #########################

############################# Filebeat ######################################
filebeat:
  # List of prospectors to fetch data.
  prospectors:
    # Each - is a prospector. Below are the prospector specific configurations
    -
      # Paths that should be crawled and fetched. Glob based paths.
      # To fetch all ".log" files from a specific level of subdirectories
      # /var/log/*/*.log can be used.
      # For each file found under this path, a harvester is started.
      # Make sure not file is defined twice as this can lead to unexpected behaviour.
      paths:
        {%- for path in prospectors.paths %}
        {{ '- {0}'.format(path) }}
        {%- endfor %}
        #- c:\programdata\elasticsearch\logs\*

      # Configure the file encoding for reading files with international characters
      # following the W3C recommendation for HTML5 (http://www.w3.org/TR/encoding).
      # Some sample encodings:
      #   plain, utf-8, utf-16be-bom, utf-16be, utf-16le, big5, gb18030, gbk,
      #    hz-gb-2312, euc-kr, euc-jp, iso-2022-jp, shift-jis, ...
      {%- if prospectors.encoding is defined %}
      encoding: {{ prospectors.encoding }}
      {%- endif %}

      # Type of the files. Based on this the way the file is read is decided.
      # The different types cannot be mixed in one prospector
      #
      # Possible options are:
      # * log: Reads every line of the log file (default)
      # * stdin: Reads the standard in
      input_type: {{ prospectors.input_type }}

      {%- if prospectors.exclude_lines is defined %}
      # Exclude lines. A list of regular expressions to match. It drops the lines that are
      # matching any regular expression from the list. The include_lines is called before
      # exclude_lines. By default, no lines are dropped.
      {%- for exclude_line in prospectors.exclude_lines %}
      {{ '- {0}'.format(exclude_line) }}
      {%- endfor %}
      {%- endif %}

      {%- if prospectors.include_lines is defined %}
      # Include lines. A list of regular expressions to match. It exports the lines that are
      # matching any regular expression from the list. The include_lines is called before
      # exclude_lines. By default, all the lines are exported.
      {%- for include_line in prospectors.include_lines %}
      {{ '- {0}'.format(include_line) }}
      {%- endfor %}
      {%- endif %}

      {%- if prospectors.exclude_files is defined %}
      # Exclude files. A list of regular expressions to match. Filebeat drops the files that
      # are matching any regular expression from the list. By default, no files are dropped.
      {%- for exclude_file in prospectors.exclude_files %}
      {{ '- {0}'.format(exclude_file) }}
      {%- endfor %}
      {%- endif %}
      
      # Optional additional fields. These field can be freely picked
      # to add additional information to the crawled log files for filtering
      {%- if prospectors.fields is defined %}
      fields:
        {%- for key, value in prospectors.fields.items() %}
        {{ key }}: {{ value }}
        {%- endfor %}
      {%- endif %}

      {%- if prospectors.fields_under_root is defined %}
      # Set to true to store the additional fields as top level fields instead
      # of under the "fields" sub-dictionary. In case of name conflicts with the
      # fields added by Filebeat itself, the custom fields overwrite the default
      # fields.
      fields_under_root: {{ prospectors.fields_under_root }}
      {%- endif %}

      {%- if prospectors.ignore_older is defined %}
      # Ignore files which were modified more then the defined timespan in the past
      # Time strings like 2h (2 hours), 5m (5 minutes) can be used.
      ignore_older: {{ prospectors.ignore_older }}
      {%- endif %}

      {%- if prospectors.document_type is defined %}
      # Type to be published in the 'type' field. For Elasticsearch output,
      # the type defines the document type these entries should be stored
      # in. Default: log
      document_type: {{ prospectors.document_type }}
      {%- endif %}

      {%- if prospectors.scan_frequency is defined %}
      # Scan frequency in seconds.
      # How often these files should be checked for changes. In case it is set
      # to 0s, it is done as often as possible. Default: 10s
      scan_frequency: {{ prospectors.scan_frequency }}
      {%- endif %}

      {%- if prospectors.harvester_buffer_size is defined %}
      # Defines the buffer size every harvester uses when fetching the file
      harvester_buffer_size: {{ prospectors.harvester_buffer_size }}
      {%- endif %}

      {%- if prospectors.max_bytes is defined %}
      # Maximum number of bytes a single log event can have
      # All bytes after max_bytes are discarded and not sent. The default is 10MB.
      # This is especially useful for multiline log messages which can get large.
      max_bytes: {{ prospectors.max_bytes }}
      {%- endif %}

      {%- if prospectors.multiline is defined %}
      # Mutiline can be used for log messages spanning multiple lines. This is common
      # for Java Stack Traces or C-Line Continuation
      multiline:
        {%- if prospectors.multiline.pattern is defined %}
        # The regexp Pattern that has to be matched. The example pattern matches all lines starting with [
        pattern: {{ prospectors.multiline.pattern }}
        {%- endif %}

        {%- if prospectors.multiline.negate is defined %}
        # Defines if the pattern set under pattern should be negated or not. Default is false.
        negate: {{ prospectors.multiline.negate }}
        {%- endif %}

        {%- if prospectors.multiline.match is defined %}
        # Match can be set to "after" or "before". It is used to define if lines should be append to a pattern
        # that was (not) matched before or after or as long as a pattern is not matched based on negate.
        # Note: After is the equivalent to previous and before is the equivalent to to next in Logstash
        match: {{ prospectors.multiline.match }}
        {%- endif %}

        # The maximum number of lines that are combined to one event.
        # In case there are more the max_lines the additional lines are discarded.
        # Default is 500
        {%- if prospectors.multiline.max_lines is defined %}
        max_lines: {{ prospectors.multiline.max_lines }}
        {%- endif %}

        {%- if prospectors.multiline.timeout is defined %}
        # After the defined timeout, an multiline event is sent even if no new pattern was found to start a new event
        # Default is 5s.
        timeout: {{ prospectors.multiline.timeout }}
        {%- endif %}
      {%- endif %}

      {%- if prospectors.tail_files is defined %}
      # Setting tail_files to true means filebeat starts readding new files at the end
      # instead of the beginning. If this is used in combination with log rotation
      # this can mean that the first entries of a new file are skipped.
      tail_files: {{ prospectors.tail_files }}
      {%- endif %}

      {%- if prospectors.backoff is defined %}
      # Backoff values define how agressively filebeat crawls new files for updates
      # The default values can be used in most cases. Backoff defines how long it is waited
      # to check a file again after EOF is reached. Default is 1s which means the file
      # is checked every second if new lines were added. This leads to a near real time crawling.
      # Every time a new line appears, backoff is reset to the initial value.
      backoff: {{ prospectors.backoff }}
      {%- endif %}

      {%- if prospectors.encoding is defined %}
      # Max backoff defines what the maximum backoff time is. After having backed off multiple times
      # from checking the files, the waiting time will never exceed max_backoff idenependent of the
      # backoff factor. Having it set to 10s means in the worst case a new line can be added to a log
      # file after having backed off multiple times, it takes a maximum of 10s to read the new line
      max_backoff: {{ prospectors.max_backoff }}
      {%- endif %}

      {%- if prospectors.backoff_factor is defined %}
      # The backoff factor defines how fast the algorithm backs off. The bigger the backoff factor,
      # the faster the max_backoff value is reached. If this value is set to 1, no backoff will happen.
      # The backoff value will be multiplied each time with the backoff_factor until max_backoff is reached
      backoff_factor: {{ prospectors.backoff_factor }}
      {%- endif %}

      {%- if prospectors.force_close_files is defined %}
      # This option closes a file, as soon as the file name changes.
      # This config option is recommended on windows only. Filebeat keeps the files it's reading open. This can cause
      # issues when the file is removed, as the file will not be fully removed until also Filebeat closes
      # the reading. Filebeat closes the file handler after ignore_older. During this time no new file with the
      # same name can be created. Turning this feature on the other hand can lead to loss of data
      # on rotate files. It can happen that after file rotation the beginning of the new
      # file is skipped, as the reading starts at the end. We recommend to leave this option on false
      # but lower the ignore_older value to release files faster.
      force_close_files: {{ prospectors.force_close_files }}
      {%- endif %}

    # Additional prospector
    #-
      # Configuration to use stdin input
      #input_type: stdin

  {%- if prospectors.spool_size is defined %}
  # General filebeat configuration options
  #
  # Event count spool threshold - forces network flush if exceeded
  spool_size: {{ prospectors.spool_size }}
  {%- endif %}

  {%- if prospectors.idle_timeout is defined %}
  # Defines how often the spooler is flushed. After idle_timeout the spooler is
  # Flush even though spool_size is not reached.
  idle_timeout: {{ prospectors.idle_timeout }}
  {%- endif %}

  # Name of the registry file. Per default it is put in the current working
  # directory. In case the working directory is changed after when running
  # filebeat again, indexing starts from the beginning again.
  registry_file: {{ prospectors.registry_file }}

  {%- if prospectors.config_dir is defined %}
  # Full Path to directory with additional prospector configuration files. Each file must end with .yml
  # These config files must have the full filebeat config part inside, but only
  # the prospector part is processed. All global options like spool_size are ignored.
  # The config_dir MUST point to a different directory then where the main filebeat config file is in.
  config_dir: {{ prospectors.config_dir }}
  {%- endif %}

###############################################################################
############################# Libbeat Config ##################################
# Base config file used by all other beats for using libbeat features

############################# Output ##########################################

# Configure what outputs to use when sending the data collected by the beat.
# Multiple outputs may be used.
output:
  {%- if output.elasticsearch is defined and output.logstash is not defined and output.redis is not defined %}
  ### Elasticsearch as output
  elasticsearch:
    # Array of hosts to connect to.
    # Scheme and port can be left out and will be set to the default (http and 9200)
    # In case you specify and additional path, the scheme is required: http://localhost:9200/path
    # IPv6 addresses should always be defined as: https://[2001:db8::1]:9200
    hosts: [{{ "'%s'" %"','".join(output.elasticsearch.hosts) }}]

    # Optional protocol and basic auth credentials.
    {%- if output.elasticsearch.protocol is defined %}
    protocol: "{{ output.elasticsearch.protocol }}"
    {%- endif %}
    {%- if output.elasticsearch.username is defined %}
    username: "{{ output.elasticsearch.username }}"
    {%- endif %}
    {%- if output.elasticsearch.password is defined %}
    password: "{{ output.elasticsearch.password }}"
    {%- endif %}

    {%- if output.elasticsearch.worker is defined %}
    # Number of workers per Elasticsearch host.
    worker: {{ output.elasticsearch.worker }}
    {%- endif %}

    {%- if output.elasticsearch.index is defined %}
    # Optional index name. The default is "filebeat" and generates
    # [filebeat-]YYYY.MM.DD keys.
    index: "{{ output.elasticsearch.index }}"
    {%- endif %}

    {%- if output.elasticsearch.path is defined %}
    # Optional HTTP Path
    path: "{{ output.elasticsearch.path }}"
    {%- endif %}

    {%- if output.elasticsearch.proxy_url is defined %}
    # Proxy server url
    proxy_url: "{{ output.elasticsearch.proxy_url }}"
    {%- endif %}

    {%- if output.elasticsearch.max_retries is defined %}
    # The number of times a particular Elasticsearch index operation is attempted. If
    # the indexing operation doesn't succeed after this many retries, the events are
    # dropped. The default is 3.
    max_retries: {{ output.elasticsearch.max_retries }}
    {%- endif %}

    {%- if output.elasticsearch.bulk_max_size is defined %}
    # The maximum number of events to bulk in a single Elasticsearch bulk API index request.
    # The default is 50.
    bulk_max_size: {{ output.elasticsearch.bulk_max_size }}
    {%- endif %}

    {%- if output.elasticsearch.timeout is defined %}
    # Configure http request timeout before failing an request to Elasticsearch.
    timeout: {{ output.elasticsearch.timeout }}
    {%- endif %}

    {%- if output.elasticsearch.flush_interval is defined %}
    # The number of seconds to wait for new events between two bulk API index requests.
    # If `bulk_max_size` is reached before this interval expires, addition bulk index
    # requests are made.
    flush_interval: {{ output.elasticsearch.flush_interval }}
    {%- endif %}

    {%- if output.elasticsearch.save_topology is defined %}
    # Boolean that sets if the topology is kept in Elasticsearch. The default is
    # false. This option makes sense only for Packetbeat.
    save_topology: {{ output.elasticsearch.save_topology }}
    {%- endif %}

    # The time to live in seconds for the topology information that is stored in
    # Elasticsearch. The default is 15 seconds.
    {%- if output.elasticsearch.topology_expire is defined %}
    topology_expire: {{ output.elasticsearch.topology_expire }}
    {%- endif %}

    {%- if output.elasticsearch.tls is defined %}
    # tls configuration. By default is off.
    tls:
      {%- if output.elasticsearch.tls.certificate_authorities is defined %}
      # List of root certificates for HTTPS server verifications
      certificate_authorities: [{{ "'%s'" %"','".join(output.elasticsearch.tls.certificate_authorities) }}]
      {%- endif %}

      {%- if output.elasticsearch.tls.certificate is defined %}
      # Certificate for TLS client authentication
      certificate: "{{ output.elasticsearch.tls.certificate }}"
      {%- endif %}

      {%- if output.elasticsearch.tls.certificate_key is defined %}
      # Client Certificate Key
      certificate_key: "{{ output.elasticsearch.tls.certificate_key }}"
      {%- endif %}

      {%- if output.elasticsearch.tls.insecure is defined %}
      # Controls whether the client verifies server certificates and host name.
      # If insecure is set to true, all server host names and certificates will be
      # accepted. In this mode TLS based connections are susceptible to
      # man-in-the-middle attacks. Use only for testing.
      insecure: {{ output.elasticsearch.tls.insecure }}
      {%- endif %}

      {%- if output.elasticsearch.tls.cipher_suites is defined %}
      # Configure cipher suites to be used for TLS connections
      cipher_suites: [{{ "'%s'" %"','".join(output.elasticsearch.tls.cipher_suites) }}]
      {%- endif %}

      {%- if output.elasticsearch.tls.curve_types is defined %}
      # Configure curve types for ECDHE based cipher suites
      curve_types: [{{ "'%s'" %"','".join(output.elasticsearch.tls.curve_types) }}]
      {%- endif %}

      {%- if output.elasticsearch.tls.min_version is defined %}
      # Configure minimum TLS version allowed for connection to logstash
      min_version: {{ output.elasticsearch.tls.min_version }}
      {%- endif %}

      {%- if output.elasticsearch.tls.max_version is defined %}
      # Configure maximum TLS version allowed for connection to logstash
      max_version: {{ output.elasticsearch.tls.max_version }}
      {%- endif %}
    {%- endif %}
  {%- endif %}
  {%- if output.logstash is defined %}
  ### Logstash as output
  logstash:
    {%- if output.logstash.hosts is defined %}
    # The Logstash hosts
    hosts:
      {%- for value in output.logstash.hosts %}
      - {{ value }}
      {%- endfor %}
    {%- endif %}

    {%- if output.logstash.worker is defined %}
    # Number of workers per Logstash host.
    worker: {{ output.logstash.worker }}
    {%- endif %}

    {%- if output.logstash.compression_level is defined %}
    # Set gzip compression level.
    compression_level: {{ output.compression_level.worker }}
    {%- endif %}

    {%- if output.logstash.loadbalance is defined %}
    # Optional load balance the events between the Logstash hosts
    loadbalance: true
    {%- endif %}

    {%- if output.logstash.index is defined %}
    # Optional index name. The default index name depends on the each beat.
    # For Packetbeat, the default is set to packetbeat, for Topbeat
    # top topbeat and for Filebeat to filebeat.
    index: {{ output.logstash.index }}
    {%- endif %}

    {%- if output.logstash.tls is defined %}
    # Optional TLS. By default is off.
    tls:
      # List of root certificates for HTTPS server verifications
      {%- if output.logstash.tls.certificate_authorities is defined %}
      certificate_authorities:
        {%- for value in output.logstash.tls.certificate_authorities %}
        - {{ value }}
        {%- endfor %}
      {%- endif %}

      # Certificate for TLS client authentication
      {%- if output.logstash.tls.certificate is defined %}
      certificate: "{{ output.logstash.tls.certificate }}"
      {%- endif %}

      # Client Certificate Key
      {%- if output.logstash.tls.certificate_key is defined %}
      certificate_key: "{{ output.logstash.tls.certificate_key }}"
      {%- endif %}

      # Controls whether the client verifies server certificates and host name.
      # If insecure is set to true, all server host names and certificates will be
      # accepted. In this mode TLS based connections are susceptible to
      # man-in-the-middle attacks. Use only for testing.
      {%- if output.logstash.tls.insecure is defined %}
      insecure: {{ output.logstash.tls.insecure }}
      {%- endif %}

      # Configure cipher suites to be used for TLS connections
      {%- if output.logstash.tls.cipher_suites is defined %}
      cipher_suites: [{{ "'%s'" %"','".join(output.logstash.tls.cipher_suites) }}]
      {%- endif %}

      # Configure curve types for ECDHE based cipher suites
      {%- if output.logstash.tls.curve_types is defined %}
      curve_types: [{{ "'%s'" %"','".join(output.logstash.tls.curve_types) }}]
      {%- endif %}
    {%- endif %}
  {%- endif %}
  {%- if output.file is defined %}
  ### File as output
  file:
    {%- if output.file.path is defined %}
    # Path to the directory where to save the generated files. The option is mandatory.
    path: "{{ output.file.path }}"
    {%- endif %}

    {%- if output.file.filename is defined %}
    # Name of the generated files. The default is `topbeat` and it generates files: `topbeat`, `topbeat.1`, `topbeat.2`, etc.
    filename: {{ output.file.filename }}
    {%- endif %}

    {%- if output.file.rotate_every_kb is defined %}
    # Maximum size in kilobytes of each file. When this size is reached, the files are
    # rotated. The default value is 10 MB.
    rotate_every_kb: {{ output.file.rotate_every_kb }}
    {%- endif %}

    {%- if output.file.number_of_files is defined %}
    # Maximum number of files under path. When this number of files is reached, the
    # oldest file is deleted and the rest are shifted from last to first. The default
    # is 7 files.
    number_of_files: {{ output.file.number_of_files }}
    {%- endif %}
  {%- endif %}
  {%- if output.redis is defined %}
  redis:
    # Set the host and port where to find Redis.
    {%- if output.redis.hosts is defined %}
    hosts:
      {%- for host in output.redis.hosts %}
      - {{ host }}
      {%- endfor %}
    {%- endif %}
    {%- if output.redis.host is defined %}
    host: {{ output.redis.host }}
    {%- endif %}
    {%- if output.redis.port is defined %}
    port: {{ output.redis.port }}
    {%- endif %}

    {%- if output.redis.save_topology is defined %}
    # Uncomment out this option if you want to store the topology in Redis.
    # The default is false.
    save_topology: {{ output.redis.save_topology }}
    {%- endif %}

    {%- if output.redis.index is defined %}
    # Optional index name. The default is filebeat and generates filebeat keys.
    index: "{{ output.redis.index }}"
    {%- endif %}

    {%- if output.redis.db is defined %}
    # Optional Redis database number where the events are stored
    # The default is 0.
    db: {{ output.redis.db }}
    {%- endif %}

    {%- if output.redis.db_topology is defined %}
    # Optional Redis database number where the topology is stored
    # The default is 1. It must have a different value than db.
    db_topology: {{ output.redis.db_topology }}
    {%- endif %}

    {%- if output.redis.password is defined %}
    # Optional password to authenticate with. By default, no
    # password is set.
    password: "{{ output.redis.password }}"
    {%- endif %}

    {%- if output.redis.timeout is defined %}
    # Optional Redis initial connection timeout in seconds.
    # The default is 5 seconds.
    timeout: {{ output.redis.timeout }}
    {%- endif %}

    {%- if output.redis.reconnect_interval is defined %}
    # Optional interval for reconnecting to failed Redis connections.
    # The default is 1 second.
    reconnect_interval: {{ output.redis.reconnect_interval }}
    {%- endif %}

    {%- if output.redis.datatype is defined %}
    datatype: "{{ output.redis.datatype }}"
    {%- endif %}
    {%- if output.redis.host_topology is defined %}
    host_topology: "{{ output.redis.host_topology }}"
    {%- endif %}
    {%- if output.redis.password_topology is defined %}
    password_topology: "{{ output.redis.password_topology }}"
    {%- endif %}
    {%- if output.redis.worker is defined %}
    worker: "{{ output.redis.worker }}"
    {%- endif %}
    {%- if output.redis.loadbalance is defined %}
    loadbalance: "{{ output.redis.loadbalance }}"
    {%- endif %}
    {%- if output.redis.timeout is defined %}
    timeout: "{{ output.redis.timeout }}"
    {%- endif %}
    {%- if output.redis.max_retries is defined %}
    max_retries: "{{ output.redis.max_retries }}"
    {%- endif %}
    {%- if output.redis.bulk_max_size is defined %}
    bulk_max_size: "{{ output.redis.bulk_max_size }}"
    {%- endif %}
    {%- if output.redis.tls is defined %}
    tls: "{{ output.redis.tls }}"
    {%- endif %}
    {%- if output.redis.proxy_url is defined %}
    proxy_url: "{{ output.redis.proxy_url }}"
    {%- endif %}
    {%- if output.redis.proxy_use_local_resolver is defined %}
    proxy_use_local_resolver: "{{ output.redis.proxy_use_local_resolver }}"
    {%- endif %}
  {%- endif %}
  {%- if output.console is defined %}
  ### Console output
  console:
    {%- if output.console.pretty is defined %}
    # Pretty print json event
    pretty: {{ output.console.pretty }}
    {%- endif %}
  {%- endif %}
{%- if shipper is defined %}
############################# Shipper #########################################
shipper:
  {%- if shipper.name is defined %}
  # The name of the shipper that publishes the network data. It can be used to group
  # all the transactions sent by a single shipper in the web interface.
  # If this options is not defined, the hostname is used.
  name: {{ shipper.name }}
  {%- endif %}

  {%- if shipper.tags is defined %}
  # The tags of the shipper are included in their own field with each
  # transaction published. Tags make it easy to group servers by different
  # logical properties.
  tags: [{{ "'%s'" %"','".join(shipper.tags) }}]
  {%- endif %}

  {%- if shipper.ignore_outgoing is defined %}
  # Uncomment the following if you want to ignore transactions created
  # by the server on which the shipper is installed. This option is useful
  # to remove duplicates if shippers are installed on multiple servers.
  ignore_outgoing: {{ shipper.ignore_outgoing }}
  {%- endif %}

  {%- if shipper.refresh_topology_freq is defined %}
  # How often (in seconds) shippers are publishing their IPs to the topology map.
  # The default is 10 seconds.
  refresh_topology_freq: {{ shipper.refresh_topology_freq }}
  {%- endif %}

  {%- if shipper.topology_expire is defined %}
  # Expiration time (in seconds) of the IPs published by a shipper to the topology map.
  # All the IPs will be deleted afterwards. Note, that the value must be higher than
  # refresh_topology_freq. The default is 15 seconds.
  topology_expire: {{ shipper.topology_expire }}
  {%- endif %}

  {%- if shipper.geoip.paths is defined %}
  # Configure local GeoIP database support.
  # If no paths are not configured geoip is disabled.
  geoip:
    paths:
      {%- for path in shipper.geoip.paths %}
      {{ '- "{0}"'.format(path) }}
      {%- endfor %}
  {%- endif %}
{%- endif %}

{%- if logging is defined %}
############################# Logging #########################################

# There are three options for the log ouput: syslog, file, stderr.
# Under Windos systems, the log files are per default sent to the file output,
# under all other system per default to syslog.
logging:
  {%- if logging.to_syslog is defined %}
  # Send all logging output to syslog. On Windows default is false, otherwise
  # default is true.
  to_syslog: {{ logging.to_syslog }}
  {%- endif %}

  {%- if logging.to_files is defined %}
  # Write all logging output to files. Beats automatically rotate files if rotateeverybytes
  # limit is reached.
  to_files: {{ logging.to_files }}
  {%- endif %}

  {%- if logging.files is defined %}
  # To enable logging to files, to_files option has to be set to true
  files:
    {%- if logging.files.path is defined %}
    # The directory where the log files will written to.
    path: {{ logging.files.path }}
    {%- endif %}

    {%- if logging.files.name is defined %}
    # The name of the files where the logs are written to.
    name: {{ logging.files.name }}
    {%- endif %}

    {%- if logging.files.rotateeverybytes is defined %}
    # Configure log file size limit. If limit is reached, log file will be
    # automatically rotated
    rotateeverybytes: {{ logging.files.rotateeverybytes }} # = 10MB
    {%- endif %}

    # Number of rotated log files to keep. Oldest files will be deleted first.
    {%- if logging.files.keepfiles is defined %}
    keepfiles: {{ logging.files.keepfiles }}
    {%- endif %}
  {%- endif %}

  {%- if logging.selectors is defined %}
  # Enable debug output for selected components. To enable all selectors use ["*"]
  # Other available selectors are beat, publish, service
  # Multiple selectors can be chained.
  selectors: [{{ "'%s'" %"','".join(logging.selectors) }}]
  {%- endif %}

  {%- if logging.level is defined %}
  # Sets log level. The default log level is error.
  # Available log levels are: critical, error, warning, info, debug
  level: {{ logging.level }}
  {%- endif %}
{%- endif %}